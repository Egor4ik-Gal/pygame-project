Index: main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import pygame\r\nimport os\r\nfrom random import randrange, shuffle, choice\r\n\r\n\r\ndef load_image(name, colorkey=None):\r\n    fullname = os.path.join('data', name)\r\n    image = pygame.image.load(fullname)\r\n    if colorkey is not None:\r\n        image = image.convert()\r\n        if colorkey == -1:\r\n            colorkey = image.get_at((0, 0))\r\n        image.set_colorkey(colorkey)\r\n    else:\r\n        image = image.convert_alpha()\r\n    return image\r\n\r\nclass Board:\r\n    def __init__(self, screen):\r\n        self.width = 10\r\n        self.height = 10\r\n        self.board = [[0] * 10 for _ in range(10)]\r\n        self.left = 175\r\n        self.top = 40\r\n        self.cell_size = 30\r\n        self.render(screen)\r\n\r\n    def set_view(self, left, top, cell_size):\r\n        self.left = left\r\n        self.top = top\r\n        self.cell_size = cell_size\r\n\r\n    def on_click(self, cell):\r\n        print(cell)\r\n\r\n    def get_cell(self, mouse_pos):\r\n        cell_x = (mouse_pos[0] - self.left) // self.cell_size\r\n        cell_y = (mouse_pos[1] - self.top) // self.cell_size\r\n        if cell_x < 0 or cell_x >= self.width or cell_y < 0 or cell_y >= self.height:\r\n            return None\r\n        return cell_x, cell_y\r\n\r\n    def get_click(self, mouse_pos):\r\n        cell = self.get_cell(mouse_pos)\r\n        if cell:\r\n            return self.on_click(cell)\r\n        # else:\r\n        #     print(cell)\r\n\r\n    def render(self, screen):\r\n        colors = [pygame.Color(\"black\"), pygame.Color(\"white\")]\r\n        for y in range(self.height):\r\n            for x in range(self.width):\r\n                # pygame.draw.rect(screen, colors[self.board[y][x]], (\r\n                #     x * self.cell_size + self.left, y * self.cell_size + self.top, self.cell_size,\r\n                #     self.cell_size))\r\n                pygame.draw.rect(screen, pygame.Color(\"white\"), (\r\n                    x * self.cell_size + self.left, y * self.cell_size + self.top, self.cell_size,\r\n                    self.cell_size), 1)\r\n\r\n\r\nclass Ball(pygame.sprite.Sprite):\r\n    def __init__(self, *group):\r\n        super().__init__(*group)\r\n        self.image = load_image(\"ball.png\")\r\n        self.rect = self.image.get_rect()\r\n        self.rect.x = 150 + randrange(315)\r\n        self.rect.y = 0\r\n\r\n\r\nclass CatchingBalls:\r\n    def __init__(self, screen):\r\n        self.screen = screen\r\n        pygame.draw.rect(screen, (255, 255, 255), (150, 0, 350, 350))\r\n        pygame.draw.rect(screen, (200, 170, 100), (150, 400, 480, 80))\r\n        font = pygame.font.Font(None, 30)\r\n        text = font.render(\"Поймайте 30 шариков!\", True, (0, 0, 0))\r\n        text_x = 110\r\n        text_y = 10\r\n        screen.blit(text, (text_x, text_y))\r\n\r\n        self.all_sprites = pygame.sprite.Group()\r\n        self.basket = pygame.sprite.Sprite()\r\n        self.basket.image = load_image(\"basket.png\")\r\n        self.basket.rect = self.basket.image.get_rect()\r\n        self.all_sprites.add(self.basket)\r\n\r\n        self.basket.rect.x = 150\r\n        self.basket.rect.y = 250\r\n\r\n        self.hard1 = pygame.sprite.Sprite()\r\n        self.hard1.image = load_image(\"health.png\")\r\n        self.hard1.rect = self.basket.image.get_rect()\r\n        self.all_sprites.add(self.hard1)\r\n\r\n        self.hard1.rect.x = 465\r\n        self.hard1.rect.y = 10\r\n\r\n        self.hard2 = pygame.sprite.Sprite()\r\n        self.hard2.image = load_image(\"health.png\")\r\n        self.hard2.rect = self.basket.image.get_rect()\r\n        self.all_sprites.add(self.hard2)\r\n\r\n        self.hard2.rect.x = 435\r\n        self.hard2.rect.y = 10\r\n\r\n        self.hard3 = pygame.sprite.Sprite()\r\n        self.hard3.image = load_image(\"health.png\")\r\n        self.hard3.rect = self.basket.image.get_rect()\r\n        self.all_sprites.add(self.hard3)\r\n\r\n        self.hard3.rect.x = 405\r\n        self.hard3.rect.y = 10\r\n\r\n        self.all_sprites.draw(screen)\r\n\r\n        # pygame.display.flip()\r\n        if self.playing():\r\n            font = pygame.font.Font(None, 40)\r\n            text = font.render(\"Вы победили!!!\", True, (100, 255, 100))\r\n            text_x = 210\r\n            text_y = 150\r\n            text_w = text.get_width()\r\n            text_h = text.get_height()\r\n            pygame.draw.rect(screen, (0, 0, 0), (text_x - 10, text_y - 10,\r\n                                                 text_w + 20, text_h + 20))\r\n            screen.blit(text, (text_x, text_y))\r\n        else:\r\n            font = pygame.font.Font(None, 40)\r\n            text = font.render(\"Вы проиграли!!!\", True, (100, 255, 100))\r\n            text_x = 210\r\n            text_y = 150\r\n            text_w = text.get_width()\r\n            text_h = text.get_height()\r\n            pygame.draw.rect(screen, (0, 0, 0), (text_x - 10, text_y - 10,\r\n                                                 text_w + 20, text_h + 20))\r\n            screen.blit(text, (text_x, text_y))\r\n\r\n    def playing(self):\r\n        clock = pygame.time.Clock()\r\n        running = True\r\n\r\n        CREATINGBALLS = pygame.USEREVENT + 1\r\n        FALL = pygame.USEREVENT + 2\r\n        pygame.time.set_timer(CREATINGBALLS, 900)\r\n        count_of_fallen_balls = 0\r\n        count_of_catched_balls = 0\r\n        count = 0\r\n        list_of_balls = []\r\n        while running:\r\n            for event in pygame.event.get():\r\n                if event.type == pygame.QUIT:\r\n                    running = False\r\n                if event.type == CREATINGBALLS:\r\n                    list_of_balls.append(Ball(self.all_sprites))\r\n                    count += 1\r\n                    if count == 33:\r\n                        pygame.time.set_timer(CREATINGBALLS, 0)\r\n                if event.type == FALL:\r\n                    for i in range(len(list_of_balls)):\r\n                        list_of_balls[i].rect.y += 1\r\n                        if list_of_balls[i].rect.y == 310:\r\n                            count_of_fallen_balls += 1\r\n                            list_of_balls[i].kill()\r\n                            list_of_balls.remove(list_of_balls[i])\r\n                            if count_of_fallen_balls == 1:\r\n                                self.hard3.kill()\r\n                            if count_of_fallen_balls == 2:\r\n                                self.hard2.kill()\r\n                            if count_of_fallen_balls == 3:\r\n                                self.hard1.kill()\r\n                            break\r\n                        if list_of_balls[i].rect.center[1] in range(270, 310) and \\\r\n                                list_of_balls[i].rect.center[0] in range(self.basket.rect.x, self.basket.rect.x + 100):\r\n                            list_of_balls[i].kill()\r\n                            count_of_catched_balls += 1\r\n                            list_of_balls.remove(list_of_balls[i])\r\n                            break\r\n                if count == 1:\r\n                    pygame.time.set_timer(FALL, 4)\r\n            keys = pygame.key.get_pressed()\r\n            if keys[pygame.K_LEFT]:\r\n                if self.basket.rect.x > 145:\r\n                    self.basket.rect.x -= 1\r\n                    clock.tick(300)\r\n            if keys[pygame.K_RIGHT]:\r\n                if self.basket.rect.x < 435:\r\n                    self.basket.rect.x += 1\r\n                    clock.tick(300)\r\n            pygame.draw.rect(self.screen, (255, 255, 255), (150, 0, 350, 350))\r\n            pygame.draw.rect(self.screen, (200, 170, 100), (150, 300, 350, 60))\r\n            font = pygame.font.Font(None, 30)\r\n            text = font.render(\"Поймайте 30 шариков!\", True, (0, 0, 0))\r\n            text_x = 155\r\n            text_y = 10\r\n            self.screen.blit(text, (text_x, text_y))\r\n\r\n            stroka = f'Вы поймали {count_of_catched_balls}/30'\r\n            text2 = font.render(stroka, True, (0, 0, 0))\r\n            text2_x = 155\r\n            text2_y = 35\r\n            self.screen.blit(text2, (text2_x, text2_y))\r\n            self.all_sprites.draw(self.screen)\r\n            pygame.display.flip()\r\n            if count_of_fallen_balls >= 3:\r\n                return False\r\n            if count_of_catched_balls == 30:\r\n                return True\r\n\r\n\r\nclass SearchEmoji(Board):\r\n    def __init__(self, screen):\r\n        self.screen = screen\r\n        pygame.draw.rect(screen, (100, 100, 100), (150, 0, 350, 350))\r\n        self.n = randrange(1, 31)\r\n        self.desired_emoji = load_image(f'emoji{self.n}.png')\r\n        screen.blit(self.desired_emoji, (250, 6))\r\n        self.desired_emoji_coords = (randrange(10), randrange(10))\r\n        super().__init__(screen)\r\n        font = pygame.font.Font(None, 30)\r\n        text = font.render(\"Найдите:\", True, (0, 0, 0))\r\n        text_x = 155\r\n        text_y = 10\r\n        screen.blit(text, (text_x, text_y))\r\n        self.time = 19\r\n        text2 = font.render(str(self.time), True, (0, 0, 0))\r\n        text2_x = 380\r\n        text2_y = 10\r\n        screen.blit(text2, (text2_x, text2_y))\r\n\r\n        self.all_sprites = pygame.sprite.Group()\r\n\r\n        self.hard1 = pygame.sprite.Sprite()\r\n        self.hard1.image = load_image(\"health.png\")\r\n        self.hard1.rect = self.hard1.image.get_rect()\r\n        self.all_sprites.add(self.hard1)\r\n\r\n        self.hard1.rect.x = 465\r\n        self.hard1.rect.y = 6\r\n\r\n        self.hard2 = pygame.sprite.Sprite()\r\n        self.hard2.image = load_image(\"health.png\")\r\n        self.hard2.rect = self.hard2.image.get_rect()\r\n        self.all_sprites.add(self.hard2)\r\n\r\n        self.hard2.rect.x = 435\r\n        self.hard2.rect.y = 6\r\n\r\n        self.hard3 = pygame.sprite.Sprite()\r\n        self.hard3.image = load_image(\"health.png\")\r\n        self.hard3.rect = self.hard3.image.get_rect()\r\n        self.all_sprites.add(self.hard3)\r\n\r\n        self.hard3.rect.x = 405\r\n        self.hard3.rect.y = 6\r\n\r\n        self.all_sprites.draw(screen)\r\n\r\n        if self.playing():\r\n            font = pygame.font.Font(None, 40)\r\n            text = font.render(\"Вы победили!!!\", True, (100, 255, 100))\r\n            text_x = 210\r\n            text_y = 150\r\n            text_w = text.get_width()\r\n            text_h = text.get_height()\r\n            pygame.draw.rect(screen, (0, 0, 0), (text_x - 10, text_y - 10,\r\n                                                 text_w + 20, text_h + 20))\r\n            screen.blit(text, (text_x, text_y))\r\n        else:\r\n            font = pygame.font.Font(None, 40)\r\n            text = font.render(\"Вы проиграли!!!\", True, (100, 255, 100))\r\n            text_x = 210\r\n            text_y = 150\r\n            text_w = text.get_width()\r\n            text_h = text.get_height()\r\n            pygame.draw.rect(screen, (0, 0, 0), (text_x - 10, text_y - 10,\r\n                                                 text_w + 20, text_h + 20))\r\n            screen.blit(text, (text_x, text_y))\r\n\r\n    def playing(self):\r\n        running = True\r\n\r\n        TIMERUNOUT = pygame.USEREVENT + 1\r\n        pygame.time.set_timer(TIMERUNOUT, 20000)\r\n        TIMER = pygame.USEREVENT + 2\r\n        pygame.time.set_timer(TIMER, 1000)\r\n\r\n        a = 'playing'\r\n        count_of_wrong_click = 0\r\n\r\n        while running:\r\n            for event in pygame.event.get():\r\n                if event.type == pygame.QUIT:\r\n                    running = False\r\n                if event.type == pygame.MOUSEBUTTONDOWN:\r\n                    if self.get_click(event.pos):\r\n                        a = 'win'\r\n                    else:\r\n                        count_of_wrong_click += 1\r\n                        if count_of_wrong_click == 1:\r\n                            self.hard3.kill()\r\n                        if count_of_wrong_click == 2:\r\n                            self.hard2.kill()\r\n                        if count_of_wrong_click == 3:\r\n                            self.hard1.kill()\r\n                if event.type == TIMERUNOUT:\r\n                    a = 'defeat'\r\n                if event.type == TIMER:\r\n                    self.time -= 1\r\n            if a == 'win':\r\n                return True\r\n            if a == 'defeat' or count_of_wrong_click >= 3:\r\n                return False\r\n            pygame.draw.rect(self.screen, (100, 100, 100), (150, 0, 350, 350))\r\n            self.screen.blit(self.desired_emoji, (250, 6))\r\n            font = pygame.font.Font(None, 30)\r\n            text = font.render(\"Найдите:\", True, (0, 0, 0))\r\n            text_x = 155\r\n            text_y = 10\r\n            self.screen.blit(text, (text_x, text_y))\r\n            text2 = font.render(str(self.time), True, (0, 0, 0))\r\n            text2_x = 380\r\n            text2_y = 10\r\n            self.screen.blit(text2, (text2_x, text2_y))\r\n            self.render(self.screen)\r\n            self.all_sprites.draw(self.screen)\r\n            pygame.display.flip()\r\n\r\n    def render(self, screen):\r\n        for y in range(self.height):\r\n            for x in range(self.width):\r\n                # pygame.draw.rect(screen, colors[self.board[y][x]], (\r\n                #     x * self.cell_size + self.left, y * self.cell_size + self.top, self.cell_size,\r\n                #     self.cell_size))\r\n\r\n                # pygame.draw.rect(screen, pygame.Color(\"white\"), (\r\n                #     x * self.cell_size + self.left, y * self.cell_size + self.top, self.cell_size,\r\n                #     self.cell_size), 1)\r\n                if self.board[x][y] == 0:\r\n                    if (x, y) == self.desired_emoji_coords:\r\n                        self.board[x][y] = self.n\r\n                        self.screen.blit(self.desired_emoji,\r\n                                        (x * self.cell_size + self.left, y * self.cell_size + self.top,\r\n                                        self.cell_size, self.cell_size))\r\n                    else:\r\n                        n = randrange(1, 31)\r\n                        while n == self.n:\r\n                            n = randrange(1, 31)\r\n                        emoji = load_image(f'emoji{n}.png')\r\n                        self.board[x][y] = n\r\n                        self.screen.blit(emoji, (x * self.cell_size + self.left, y * self.cell_size + self.top,\r\n                                        self.cell_size, self.cell_size))\r\n                else:\r\n                    emoji = load_image(f'emoji{self.board[x][y]}.png')\r\n                    self.screen.blit(emoji, (x * self.cell_size + self.left, y * self.cell_size + self.top,\r\n                                             self.cell_size, self.cell_size))\r\n\r\n    def on_click(self, cell):\r\n        if cell == self.desired_emoji_coords:\r\n            return True\r\n        else:\r\n            return False\r\n\r\n\r\nclass SearchCouples(Board):\r\n    def __init__(self, screen):\r\n        self.screen = screen\r\n        pygame.draw.rect(screen, (100, 100, 100), (150, 0, 350, 350))\r\n        self.is_first = True\r\n        self.is_clicked = False\r\n        self.curr_n = None\r\n        self.curr_coords = None\r\n        super().__init__(screen)\r\n        font = pygame.font.Font(None, 30)\r\n        text = font.render(\"Найдите пары\", True, (0, 0, 0))\r\n        text_x = 155\r\n        text_y = 10\r\n        screen.blit(text, (text_x, text_y))\r\n        self.time = 99\r\n        text2 = font.render(str(self.time), True, (0, 0, 0))\r\n        text2_x = 380\r\n        text2_y = 10\r\n        screen.blit(text2, (text2_x, text2_y))\r\n\r\n        self.all_sprites = pygame.sprite.Group()\r\n\r\n        self.hard1 = pygame.sprite.Sprite()\r\n        self.hard1.image = load_image(\"health.png\")\r\n        self.hard1.rect = self.hard1.image.get_rect()\r\n        self.all_sprites.add(self.hard1)\r\n\r\n        self.hard1.rect.x = 465\r\n        self.hard1.rect.y = 6\r\n\r\n        self.hard2 = pygame.sprite.Sprite()\r\n        self.hard2.image = load_image(\"health.png\")\r\n        self.hard2.rect = self.hard2.image.get_rect()\r\n        self.all_sprites.add(self.hard2)\r\n\r\n        self.hard2.rect.x = 435\r\n        self.hard2.rect.y = 6\r\n\r\n        self.hard3 = pygame.sprite.Sprite()\r\n        self.hard3.image = load_image(\"health.png\")\r\n        self.hard3.rect = self.hard3.image.get_rect()\r\n        self.all_sprites.add(self.hard3)\r\n\r\n        self.hard3.rect.x = 405\r\n        self.hard3.rect.y = 6\r\n\r\n        self.all_sprites.draw(screen)\r\n\r\n        if self.playing():\r\n            font = pygame.font.Font(None, 40)\r\n            text = font.render(\"Вы победили!!!\", True, (100, 255, 100))\r\n            text_x = 210\r\n            text_y = 150\r\n            text_w = text.get_width()\r\n            text_h = text.get_height()\r\n            pygame.draw.rect(screen, (0, 0, 0), (text_x - 10, text_y - 10,\r\n                                                 text_w + 20, text_h + 20))\r\n            screen.blit(text, (text_x, text_y))\r\n        else:\r\n            font = pygame.font.Font(None, 40)\r\n            text = font.render(\"Вы проиграли!!!\", True, (100, 255, 100))\r\n            text_x = 210\r\n            text_y = 150\r\n            text_w = text.get_width()\r\n            text_h = text.get_height()\r\n            pygame.draw.rect(screen, (0, 0, 0), (text_x - 10, text_y - 10,\r\n                                                 text_w + 20, text_h + 20))\r\n            screen.blit(text, (text_x, text_y))\r\n\r\n    def playing(self):\r\n        running = True\r\n\r\n        TIMERUNOUT = pygame.USEREVENT + 1\r\n        pygame.time.set_timer(TIMERUNOUT, 100000)\r\n        TIMER = pygame.USEREVENT + 2\r\n        pygame.time.set_timer(TIMER, 1000)\r\n\r\n        self.count_of_wrong_click = 0\r\n\r\n        a = 'playing'\r\n\r\n        while running:\r\n            for event in pygame.event.get():\r\n                if event.type == pygame.QUIT:\r\n                    running = False\r\n                if event.type == pygame.MOUSEBUTTONDOWN:\r\n                    self.get_click(event.pos)\r\n                    check = True\r\n                    for y in range(self.height):\r\n                        for x in range(self.width):\r\n                            if self.board[x][y] != -1:\r\n                                check = False\r\n                                break\r\n                    if check:\r\n                        a = 'win'\r\n                if event.type == TIMERUNOUT:\r\n                    a = 'defeat'\r\n                if event.type == TIMER:\r\n                    self.time -= 1\r\n            if self.count_of_wrong_click == 1:\r\n                self.hard3.kill()\r\n            if self.count_of_wrong_click == 2:\r\n                self.hard2.kill()\r\n            if self.count_of_wrong_click == 3:\r\n                self.hard1.kill()\r\n            if a == 'win':\r\n                return True\r\n            if a == 'defeat' or self.count_of_wrong_click >= 3:\r\n                return False\r\n            pygame.draw.rect(self.screen, (100, 100, 100), (150, 0, 350, 350))\r\n            font = pygame.font.Font(None, 30)\r\n            text = font.render(\"Найдите пары\", True, (0, 0, 0))\r\n            text_x = 155\r\n            text_y = 10\r\n            self.screen.blit(text, (text_x, text_y))\r\n            text2 = font.render(str(self.time), True, (0, 0, 0))\r\n            text2_x = 380\r\n            text2_y = 10\r\n            self.screen.blit(text2, (text2_x, text2_y))\r\n            self.render(self.screen)\r\n            self.all_sprites.draw(self.screen)\r\n            pygame.display.flip()\r\n\r\n    def render(self, screen):\r\n        if self.is_first:\r\n            self.is_first = False\r\n            for n in range(1, 26):\r\n                for _ in range(4):\r\n                    x, y = randrange(self.width), randrange(self.height)\r\n                    while self.board[x][y] != 0:\r\n                        x, y = randrange(self.width), randrange(self.height)\r\n                    self.board[x][y] = n\r\n                    emoji = load_image(f'emoji{n}.png')\r\n                    self.screen.blit(emoji, (x * self.cell_size + self.left, y * self.cell_size + self.top,\r\n                                             self.cell_size, self.cell_size))\r\n\r\n        if self.is_clicked:\r\n            pygame.draw.rect(screen, pygame.Color('white'), (\r\n                self.curr_coords[0] * self.cell_size + self.left, self.curr_coords[1] * self.cell_size + self.top,\r\n                self.cell_size, self.cell_size))\r\n\r\n        for y in range(self.height):\r\n            for x in range(self.width):\r\n                if self.board[x][y] == -1:\r\n                    continue\r\n                else:\r\n                    emoji = load_image(f'emoji{self.board[x][y]}.png')\r\n                    self.screen.blit(emoji, (x * self.cell_size + self.left, y * self.cell_size + self.top,\r\n                                             self.cell_size, self.cell_size))\r\n\r\n    def on_click(self, cell):\r\n        if self.board[cell[0]][cell[1]] == -1:\r\n            return\r\n        if self.is_clicked:\r\n            if cell == self.curr_coords:\r\n                self.is_clicked = False\r\n                self.curr_coords = None\r\n                self.curr_n = None\r\n            else:\r\n                if self.curr_n == self.board[cell[0]][cell[1]]:\r\n                    self.board[cell[0]][cell[1]] = -1\r\n                    self.board[self.curr_coords[0]][self.curr_coords[1]] = -1\r\n                    self.is_clicked = False\r\n                    self.curr_coords = None\r\n                    self.curr_n = None\r\n                else:\r\n                    self.count_of_wrong_click += 1\r\n        else:\r\n            self.is_clicked = True\r\n            self.curr_coords = cell\r\n            self.curr_n = self.board[cell[0]][cell[1]]\r\n\r\nclass ConnectingWires:\r\n    def __init__(self, screen):\r\n        self.screen = screen\r\n        pygame.draw.rect(screen, (100, 100, 100), (150, 0, 350, 350))\r\n\r\n        self.colors = [pygame.Color(\"red\"), pygame.Color(\"orange\"), pygame.Color(\"green\"),\r\n                       pygame.Color(\"blue\"), pygame.Color(\"yellow\"), pygame.Color(\"purple\")]\r\n\r\n        shuffle(self.colors)\r\n\r\n\r\n        self.left_wires_coords = {\r\n            (150, 60, 60, 20): self.colors[0],\r\n            (150, 110, 60, 20): self.colors[1],\r\n            (150, 160, 60, 20): self.colors[2],\r\n            (150, 210, 60, 20): self.colors[3],\r\n            (150, 260, 60, 20): self.colors[4],\r\n            (150, 310, 60, 20): self.colors[5]\r\n        }\r\n\r\n        shuffle(self.colors)\r\n\r\n        self.right_wires_coords = {\r\n            (440, 60, 60, 20): self.colors[0],\r\n            (440, 110, 60, 20): self.colors[1],\r\n            (440, 160, 60, 20): self.colors[2],\r\n            (440, 210, 60, 20): self.colors[3],\r\n            (440, 260, 60, 20): self.colors[4],\r\n            (440, 310, 60, 20): self.colors[5]\r\n        }\r\n\r\n\r\n        font = pygame.font.Font(None, 30)\r\n        text = font.render(\"Найдите:\", True, (0, 0, 0))\r\n        text_x = 155\r\n        text_y = 10\r\n        screen.blit(text, (text_x, text_y))\r\n        self.time = 19\r\n        text2 = font.render(str(self.time), True, (0, 0, 0))\r\n        text2_x = 380\r\n        text2_y = 10\r\n        screen.blit(text2, (text2_x, text2_y))\r\n\r\n        self.all_sprites = pygame.sprite.Group()\r\n\r\n        self.hard1 = pygame.sprite.Sprite()\r\n        self.hard1.image = load_image(\"health.png\")\r\n        self.hard1.rect = self.hard1.image.get_rect()\r\n        self.all_sprites.add(self.hard1)\r\n\r\n        self.hard1.rect.x = 465\r\n        self.hard1.rect.y = 6\r\n\r\n        self.hard2 = pygame.sprite.Sprite()\r\n        self.hard2.image = load_image(\"health.png\")\r\n        self.hard2.rect = self.hard2.image.get_rect()\r\n        self.all_sprites.add(self.hard2)\r\n\r\n        self.hard2.rect.x = 435\r\n        self.hard2.rect.y = 6\r\n\r\n        self.hard3 = pygame.sprite.Sprite()\r\n        self.hard3.image = load_image(\"health.png\")\r\n        self.hard3.rect = self.hard3.image.get_rect()\r\n        self.all_sprites.add(self.hard3)\r\n\r\n        self.hard3.rect.x = 405\r\n        self.hard3.rect.y = 6\r\n\r\n        self.all_sprites.draw(screen)\r\n\r\n        if self.playing():\r\n            font = pygame.font.Font(None, 40)\r\n            text = font.render(\"Вы победили!!!\", True, (100, 255, 100))\r\n            text_x = 210\r\n            text_y = 150\r\n            text_w = text.get_width()\r\n            text_h = text.get_height()\r\n            pygame.draw.rect(screen, (0, 0, 0), (text_x - 10, text_y - 10,\r\n                                                 text_w + 20, text_h + 20))\r\n            screen.blit(text, (text_x, text_y))\r\n        else:\r\n            font = pygame.font.Font(None, 40)\r\n            text = font.render(\"Вы проиграли!!!\", True, (100, 255, 100))\r\n            text_x = 210\r\n            text_y = 150\r\n            text_w = text.get_width()\r\n            text_h = text.get_height()\r\n            pygame.draw.rect(screen, (0, 0, 0), (text_x - 10, text_y - 10,\r\n                                                 text_w + 20, text_h + 20))\r\n            screen.blit(text, (text_x, text_y))\r\n\r\n    def get_color(self, pos):\r\n        x, y = pos\r\n        if y in range(60, 81):\r\n            if x in range(150,210):\r\n                return self.left_wires_coords[(150, 60, 60, 20)]\r\n            elif x in range(440, 500):\r\n                return self.right_wires_coords[(440, 60, 60, 20)]\r\n        elif y in range(110, 131):\r\n            if x in range(150, 210):\r\n                return self.left_wires_coords[(150, 110, 60, 20)]\r\n            elif x in range(440, 500):\r\n                return self.right_wires_coords[(440, 110, 60, 20)]\r\n        elif y in range(160, 181):\r\n            if x in range(150, 210):\r\n                return self.left_wires_coords[(150, 160, 60, 20)]\r\n            elif x in range(440, 500):\r\n                return self.right_wires_coords[(440, 160, 60, 20)]\r\n        elif y in range(210, 231):\r\n            if x in range(150, 210):\r\n                return self.left_wires_coords[(150, 210, 60, 20)]\r\n            elif x in range(440, 500):\r\n                return self.right_wires_coords[(440, 210, 60, 20)]\r\n        elif y in range(260, 281):\r\n            if x in range(150, 210):\r\n                return self.left_wires_coords[(150, 260, 60, 20)]\r\n            elif x in range(440, 500):\r\n                return self.right_wires_coords[(440, 260, 60, 20)]\r\n        elif y in range(310, 331):\r\n            if x in range(150, 210):\r\n                return self.left_wires_coords[(150, 310, 60, 20)]\r\n            elif x in range(440, 500):\r\n                return self.right_wires_coords[(440, 310, 60, 20)]\r\n        return False\r\n\r\n    def get_coords(self, pos):\r\n        x, y = pos\r\n        if y in range(60, 81):\r\n            if x in range(150, 210):\r\n                return (150, 60, 60, 20)\r\n            elif x in range(440, 500):\r\n                return (440, 60, 60, 20)\r\n        elif y in range(110, 131):\r\n            if x in range(150, 210):\r\n                return (150, 110, 60, 20)\r\n            elif x in range(440, 500):\r\n                return (440, 110, 60, 20)\r\n        elif y in range(160, 181):\r\n            if x in range(150, 210):\r\n                return (150, 160, 60, 20)\r\n            elif x in range(440, 500):\r\n                return (440, 160, 60, 20)\r\n        elif y in range(210, 231):\r\n            if x in range(150, 210):\r\n                return (150, 210, 60, 20)\r\n            elif x in range(440, 500):\r\n                return (440, 210, 60, 20)\r\n        elif y in range(260, 281):\r\n            if x in range(150, 210):\r\n                return (150, 260, 60, 20)\r\n            elif x in range(440, 500):\r\n                return (440, 260, 60, 20)\r\n        elif y in range(310, 331):\r\n            if x in range(150, 210):\r\n                return (150, 310, 60, 20)\r\n            elif x in range(440, 500):\r\n                return (440, 310, 60, 20)\r\n        return False\r\n\r\n    def playing(self):\r\n        running = True\r\n\r\n        TIMERUNOUT = pygame.USEREVENT + 1\r\n        pygame.time.set_timer(TIMERUNOUT, 20000)\r\n        TIMER = pygame.USEREVENT + 2\r\n        pygame.time.set_timer(TIMER, 1000)\r\n\r\n        a = 'playing'\r\n        click = False\r\n        color = None\r\n        count_of_wrong_click = 0\r\n        count_of_connected_wires = 0\r\n        starts_and_ends = []\r\n\r\n        while running:\r\n            for event in pygame.event.get():\r\n                if event.type == pygame.QUIT:\r\n                    running = False\r\n                if event.type == pygame.MOUSEBUTTONDOWN:\r\n                    if self.get_coords(event.pos):\r\n                        if click:\r\n                            if self.get_color(event.pos) == color:\r\n                                click = False\r\n                                if coords_for_rect == self.get_coords(event.pos):\r\n                                    pass\r\n                                else:\r\n                                    count_of_connected_wires += 1\r\n                                    if coords_for_rect[0] < self.get_coords(event.pos)[0]:\r\n                                        b = ((210, coords_for_rect[1] + 9), (440, self.get_coords(event.pos)[1] + 9),\r\n                                            self.get_color(event.pos))\r\n                                        starts_and_ends.append(b)\r\n                                    else:\r\n                                        b = ((210, self.get_coords(event.pos)[1] + 9), (440, coords_for_rect[1] + 9),\r\n                                            self.get_color(event.pos))\r\n                                        starts_and_ends.append(b)\r\n                            else:\r\n                                count_of_wrong_click += 1\r\n                                if count_of_wrong_click == 1:\r\n                                    self.hard3.kill()\r\n                                if count_of_wrong_click == 2:\r\n                                    self.hard2.kill()\r\n                                if count_of_wrong_click == 3:\r\n                                    self.hard1.kill()\r\n                        else:\r\n                            click = True\r\n                            coords_for_rect = self.get_coords(event.pos)\r\n                            color = self.get_color(event.pos)\r\n                if event.type == TIMERUNOUT:\r\n                    a = 'defeat'\r\n                if event.type == TIMER:\r\n                    self.time -= 1\r\n            pygame.draw.rect(self.screen, (100, 100, 100), (150, 0, 350, 350))\r\n            for coords in self.left_wires_coords.keys():\r\n                pygame.draw.rect(self.screen, self.left_wires_coords[coords], coords)\r\n            for coords in self.right_wires_coords.keys():\r\n                pygame.draw.rect(self.screen, self.right_wires_coords[coords], coords)\r\n            if click:\r\n                pygame.draw.rect(self.screen, pygame.Color('white'), coords_for_rect, 2)\r\n            for elem in starts_and_ends:\r\n                if elem[0][1] == 69 and elem[1][1] == 319:\r\n                    pygame.draw.line(self.screen, elem[2],\r\n                                     (elem[0][0], elem[0][1] - 9), (elem[1][0], elem[1][1] + 10), width=30)\r\n                elif elem[0][1] == 319 and elem[1][1] == 69:\r\n                    pygame.draw.line(self.screen, elem[2],\r\n                                     (elem[0][0], elem[0][1] + 10), (elem[1][0], elem[1][1] - 9), width=30)\r\n                else:\r\n                    pygame.draw.line(self.screen, elem[2], elem[0], elem[1], width=20)\r\n            font = pygame.font.Font(None, 30)\r\n            text = font.render(\"Соедините\", True, (0, 0, 0))\r\n            text_x = 155\r\n            text_y = 8\r\n            self.screen.blit(text, (text_x, text_y))\r\n            text1 = font.render(\"соответствующие цвета\", True, (0, 0, 0))\r\n            text_x1 = 155\r\n            text_y1 = 30\r\n            self.screen.blit(text1, (text_x1, text_y1))\r\n            text2 = font.render(str(self.time), True, (0, 0, 0))\r\n            text2_x = 470\r\n            text2_y = 32\r\n            self.screen.blit(text2, (text2_x, text2_y))\r\n            self.all_sprites.draw(self.screen)\r\n            if count_of_connected_wires == 6:\r\n                return True\r\n            if a == 'defeat' or count_of_wrong_click >= 3:\r\n                return False\r\n            pygame.display.flip()\r\n\r\n\r\nclass Summas(Board):\r\n    def __init__(self, screen):\r\n        global flag_minigames1, flag_minigames2, flag_minigames3, room\r\n        self.screen = screen\r\n        pygame.draw.rect(screen, (100, 100, 100), (150, 0, 350, 350))\r\n        self.is_first = True\r\n        self.is_clicked = False\r\n        self.curr_n = None\r\n        self.curr_coords = None\r\n        super().__init__(screen)\r\n        font = pygame.font.Font(None, 20)\r\n        text = font.render(\"Найдите пары чисел,\", True, (0, 0, 0))\r\n        text_x = 155\r\n        text_y = 6\r\n        screen.blit(text, (text_x, text_y))\r\n        text1 = font.render(\"где сума равна 101\", True, (0, 0, 0))\r\n        text_x1 = 155\r\n        text_y1 = 10\r\n        screen.blit(text1, (text_x1, text_y1))\r\n        self.time = 499\r\n        text2 = font.render(str(self.time), True, (0, 0, 0))\r\n        text2_x = 380\r\n        text2_y = 10\r\n        screen.blit(text2, (text2_x, text2_y))\r\n\r\n        self.all_sprites = pygame.sprite.Group()\r\n\r\n        self.hard1 = pygame.sprite.Sprite()\r\n        self.hard1.image = load_image(\"health.png\")\r\n        self.hard1.rect = self.hard1.image.get_rect()\r\n        self.all_sprites.add(self.hard1)\r\n\r\n        self.hard1.rect.x = 465\r\n        self.hard1.rect.y = 6\r\n\r\n        self.hard2 = pygame.sprite.Sprite()\r\n        self.hard2.image = load_image(\"health.png\")\r\n        self.hard2.rect = self.hard2.image.get_rect()\r\n        self.all_sprites.add(self.hard2)\r\n\r\n        self.hard2.rect.x = 435\r\n        self.hard2.rect.y = 6\r\n\r\n        self.hard3 = pygame.sprite.Sprite()\r\n        self.hard3.image = load_image(\"health.png\")\r\n        self.hard3.rect = self.hard3.image.get_rect()\r\n        self.all_sprites.add(self.hard3)\r\n\r\n        self.hard3.rect.x = 405\r\n        self.hard3.rect.y = 6\r\n\r\n        self.all_sprites.draw(screen)\r\n\r\n        if self.playing():\r\n            font = pygame.font.Font(None, 40)\r\n            text = font.render(\"Вы победили!!!\", True, (100, 255, 100))\r\n            text_x = 210\r\n            text_y = 150\r\n            text_w = text.get_width()\r\n            text_h = text.get_height()\r\n            pygame.draw.rect(screen, (0, 0, 0), (text_x - 10, text_y - 10,\r\n                                                 text_w + 20, text_h + 20))\r\n            screen.blit(text, (text_x, text_y))\r\n\r\n        else:\r\n            font = pygame.font.Font(None, 40)\r\n            text = font.render(\"Вы проиграли!!!\", True, (100, 255, 100))\r\n            text_x = 210\r\n            text_y = 150\r\n            text_w = text.get_width()\r\n            text_h = text.get_height()\r\n            pygame.draw.rect(screen, (0, 0, 0), (text_x - 10, text_y - 10,\r\n                                                 text_w + 20, text_h + 20))\r\n            screen.blit(text, (text_x, text_y))\r\n\r\n    def playing(self):\r\n        running = True\r\n\r\n        TIMERUNOUT = pygame.USEREVENT + 1\r\n        pygame.time.set_timer(TIMERUNOUT, 500000)\r\n        TIMER = pygame.USEREVENT + 2\r\n        pygame.time.set_timer(TIMER, 1000)\r\n\r\n        self.count_of_wrong_click = 0\r\n\r\n        a = 'playing'\r\n\r\n        while running:\r\n            self.screen.fill((0, 0, 0))\r\n            for event in pygame.event.get():\r\n                if event.type == pygame.QUIT:\r\n                    running = False\r\n                if event.type == pygame.MOUSEBUTTONDOWN:\r\n                    self.get_click(event.pos)\r\n                    check = True\r\n                    for y in range(self.height):\r\n                        for x in range(self.width):\r\n                            if self.board[x][y] != -1:\r\n                                check = False\r\n                                break\r\n                    if check:\r\n                        a = 'win'\r\n                if event.type == TIMERUNOUT:\r\n                    a = 'defeat'\r\n                if event.type == TIMER:\r\n                    self.time -= 1\r\n            if self.count_of_wrong_click == 1:\r\n                self.hard3.kill()\r\n            if self.count_of_wrong_click == 2:\r\n                self.hard2.kill()\r\n            if self.count_of_wrong_click == 3:\r\n                self.hard1.kill()\r\n            if a == 'win':\r\n                return True\r\n            if a == 'defeat' or self.count_of_wrong_click >= 3:\r\n                return False\r\n            pygame.draw.rect(self.screen, (100, 100, 100), (150, 0, 350, 350))\r\n            font = pygame.font.Font(None, 25)\r\n            text = font.render(\"Найдите пары чисел,\", True, (0, 0, 0))\r\n            text_x = 155\r\n            text_y = 6\r\n            self.screen.blit(text, (text_x, text_y))\r\n            text1 = font.render(\"где сума равна 101\", True, (0, 0, 0))\r\n            text_x1 = 155\r\n            text_y1 = 21\r\n            self.screen.blit(text1, (text_x1, text_y1))\r\n            text2 = font.render(str(self.time), True, (0, 0, 0))\r\n            text2_x = 380\r\n            text2_y = 10\r\n            self.screen.blit(text2, (text2_x, text2_y))\r\n            self.render(self.screen)\r\n            self.all_sprites.draw(self.screen)\r\n            pygame.display.flip()\r\n        pygame.quit()\r\n\r\n    def render(self, screen):\r\n        if self.is_first:\r\n            self.is_first = False\r\n            numbers = list(range(1, 101))\r\n            for y in range(self.height):\r\n                for x in range(self.width):\r\n                    n = numbers.index(choice(numbers))\r\n                    self.board[x][y] = numbers.pop(n)\r\n            # for n in range(1, 26):\r\n            #     for _ in range(4):\r\n            #         x, y = randrange(self.width), randrange(self.height)\r\n            #         while self.board[x][y] != 0:\r\n            #             x, y = randrange(self.width), randrange(self.height)\r\n            #         self.board[x][y] = n\r\n            #         emoji = load_image(f'emoji{n}.png')\r\n            #         self.screen.blit(emoji, (x * self.cell_size + self.left, y * self.cell_size + self.top,\r\n            #                                  self.cell_size, self.cell_size))\r\n\r\n        if self.is_clicked:\r\n            pygame.draw.rect(screen, pygame.Color('white'), (\r\n                self.curr_coords[0] * self.cell_size + self.left, self.curr_coords[1] * self.cell_size + self.top,\r\n                self.cell_size, self.cell_size))\r\n\r\n        for y in range(self.height):\r\n            for x in range(self.width):\r\n                if self.board[x][y] == -1:\r\n                    continue\r\n                else:\r\n                    # self.screen.blit(self.board[x][y], (x * self.cell_size + self.left, y * self.cell_size + self.top,\r\n                    #                          self.cell_size, self.cell_size))\r\n                    pygame.draw.rect(screen, pygame.Color(\"white\"), (\r\n                        x * self.cell_size + self.left, y * self.cell_size + self.top, self.cell_size,\r\n                        self.cell_size), 1)\r\n                    font = pygame.font.Font(None, 25)\r\n                    text = font.render(str(self.board[x][y]), True, (0, 0, 0))\r\n                    if self.board[x][y] == 100:\r\n                        text_x = x * self.cell_size + self.left + 1\r\n                    elif self.board[x][y] < 10:\r\n                        text_x = x * self.cell_size + self.left + 12\r\n                    else:\r\n                        text_x = x * self.cell_size + self.left + 6\r\n                    text_y = y * self.cell_size + self.top + 6\r\n                    self.screen.blit(text, (text_x, text_y))\r\n\r\n    def on_click(self, cell):\r\n        if self.board[cell[0]][cell[1]] == -1:\r\n            return\r\n        if self.is_clicked:\r\n            if cell == self.curr_coords:\r\n                self.is_clicked = False\r\n                self.curr_coords = None\r\n                self.curr_n = None\r\n            else:\r\n                if self.curr_n + self.board[cell[0]][cell[1]] == 101:\r\n                    self.board[cell[0]][cell[1]] = -1\r\n                    self.board[self.curr_coords[0]][self.curr_coords[1]] = -1\r\n                    self.is_clicked = False\r\n                    self.curr_coords = None\r\n                    self.curr_n = None\r\n                else:\r\n                    self.count_of_wrong_click += 1\r\n        else:\r\n            self.is_clicked = True\r\n            self.curr_coords = cell\r\n            self.curr_n = self.board[cell[0]][cell[1]]\r\n\r\n\r\ndef running():\r\n    pygame.init()\r\n    size = 650, 350\r\n    screen = pygame.display.set_mode(size)\r\n    pygame.display.set_caption('Игра')\r\n    a = randrange(4)\r\n    if a == 0:\r\n        Summas(screen)\r\n    elif a == 1:\r\n        SearchEmoji(screen)\r\n    elif a == 2:\r\n        SearchCouples(screen)\r\n    elif a == 3:\r\n        ConnectingWires(screen)\r\n    pygame.display.flip()\r\n    running = True\r\n\r\n    while running:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                running = False\r\n        screen.fill((255, 255, 255))\r\n    pygame.quit()\r\n\r\n\r\nif __name__ == '__main__':\r\n    running()
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.py b/main.py
--- a/main.py	
+++ b/main.py	
@@ -991,6 +991,7 @@
     screen = pygame.display.set_mode(size)
     pygame.display.set_caption('Игра')
     a = randrange(4)
+    a = 3
     if a == 0:
         Summas(screen)
     elif a == 1:
